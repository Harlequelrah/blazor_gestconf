@page "/details/conference"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Identity
@using blazor_gestconf.Models
@using blazor_gestconf.Services
@inject ConferenceService confCrud
@inject ParticipantService parCrud
@inject ParticipantConferenceService parConfCrud
@inject UserManager<Utilisateur> UserManager
@inject IHttpContextAccessor HttpContextAccessor
@rendermode InteractiveServer
@attribute [Authorize(Roles="Auteur,Participant")]
<h3>Détails de la Conférence</h3>

@if (conf == null)
{
    <p>Chargement des détails de la conférence...</p>
}
else if (conf.Id == 0)
{
    <p>Conférence introuvable.</p>
}
else
{
    <dl class="list-group">
        <dt class="list-group-item-dark">Nom:</dt>
        <dd class="list-group-item-dark">@conf.Nom</dd>
        <dt class="list-group-item-dark">Sigle:</dt>
        <dd class="list-group-item-dark">@conf.Sigle</dd>
        <dt class="list-group-item-dark">Thème:</dt>
        <dd class="list-group-item-dark">@conf.Theme</dd>
        <dt class="list-group-item-dark">Date d'ouverture pour la soumission d'articles :</dt>
        <dd class="list-group-item-dark">@conf.DateSoumissionDebut.ToString("yyyy-MM-dd")</dd>
        <dt class="list-group-item-dark">Date limite pour la soumission d'articles :</dt>
        <dd class="list-group-item-dark">@conf.DateSoumissionFin.ToString("yyyy-MM-dd")</dd>
        <dt class="list-group-item-dark">Date de remise des résultats :</dt>
        <dd class="list-group-item-dark">@conf.DateRemiseResultats.ToString("yyyy-MM-dd")</dd>
        <dt class="list-group-item-dark">Date d'ouverture des inscriptions :</dt>
        <dd class="list-group-item-dark">@conf.DateInscriptionDebut.ToString("yyyy-MM-dd")</dd>
        <dt class="list-group-item-dark">Date limite d'inscriptions :</dt>
        <dd class="list-group-item-dark">@conf.DateInscriptionFin.ToString("yyyy-MM-dd")</dd>
        <dt class="list-group-item-dark">Date d'ouverture de la conférence :</dt>
        <dd class="list-group-item-dark">@conf.DateConferenceDebut.ToString("yyyy-MM-dd")</dd>
        <dt class="list-group-item-dark">Date de clôture de la conférence :</dt>
        <dd class="list-group-item-dark">@conf.DateConferenceFin.ToString("yyyy-MM-dd")</dd>
    </dl>
    <div class="display-3">
    <AuthorizeView Roles="Auteur">
            <Authorized>
                @if (conf.DateSoumissionFin >= dat)
                {
                    <a href=@($"/add/Article?id={conf.Id}")><button class="btn btn-primary mb-3">Soumettre un article</button></a>
                }
                else
                {
                    <p>Nous n'acceptons plus d'articles</p>
                }
            </Authorized>
    </AuthorizeView>
    <AuthorizeView Roles="Participant">
        <Authorized>
                @if (conf.DateInscriptionFin >= dat)
                {
                    <button class="btn btn-primary mb-3" @onclick="()=>AddParticipant()">Participer</button>
                    <a href=@($"/show/participant/conference?id={userId}&conferenceId={id}") class="text-decoration-none btn btn-info">go to conference reserved</a>
                }
                else
                {
                    <p>Vous ne pouvez plus réserver pour cette conférence</p>
                }
            </Authorized>
    </AuthorizeView>
    </div>


}



@code {

    [SupplyParameterFromQuery]
    public int id{ get; set; }

    private int userId{ get; set; }

    public DateTime dat { get; set; } = DateTime.Now;

    ParticipantConference? parConf = new ParticipantConference();

    Conference conf = new Conference();

    Participant par = new Participant();

    protected override async Task OnInitializedAsync()
    {
        conf = await confCrud.GetByIdAsync(id);
        var user = await UserManager.GetUserAsync(HttpContextAccessor.HttpContext.User);
        if (user != null)
        {
            userId = user.Id;
        }
    }
    public async Task AddParticipant()
    {
        await parConfCrud.AddConferenceToParticipantAsync(userId, id);
    }
}
