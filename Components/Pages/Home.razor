@page "/"
@inject AuthenticationStateProvider AuthenticationStateProvider
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity
@using blazor_gestconf.Models
@inject UserManager<Utilisateur> UserManager
@inject NavigationManager NavigationManager
@rendermode InteractiveServer



<div class="container">
@if (User.Identity.IsAuthenticated)
{
    <h1 class="my-5">Bienvenue @User.Identity.Name sur la plateforme de gestion des conférences scientifiques au Togo</h1>

}
else{
        <h1 class="my-5">Bienvenue Nouvel Arrivant sur la plateforme de gestion des conférences scientifiques au Togo</h1>
}


    <div class="row">
        <div class="col-md-6">
            <p>
                La communauté scientifique du Togo souhaite analyser et concevoir un système d’information (SI) capable de gérer l’organisation et la gestion de conférences scientifiques au Togo. Une conférence est organisée par un groupe de personnes qui la co-président.
            </p>

             @if (!authenticationState.User.Identity.IsAuthenticated)
            {
                <div class="mb-3">
                    <label for="selectTypeCompte" class="form-label">Choisir le type de compte :</label>
                    <select class="form-select" id="selectTypeCompte" @onchange="OnTypeCompteSelected">
                        <option value="Participant">Créer un compte Participant</option>
                        <option value="Auteur">Créer un compte Auteur</option>
                        <option value="Relecteur">Créer un compte Relecteur</option>
                    </select>
                </div>

                <button class="btn btn-primary mb-3" @onclick="RegisterSelectedType">Enregistrer</button>
            }

<div class="mb-3">
            @if (!authenticationState.User.Identity.IsAuthenticated)
            {
                <NavLink class="btn btn-success me-2" href="/Account/Login">Se connecter</NavLink>
            }
            else
            {
                <button class="btn btn-danger mb-3" @onclick="Logout">Se déconnecter</button>
            }
</div>
        </div>
    </div>
</div>

@code {
    private string selectedType = "Participant"; // Valeur par défaut
    private AuthenticationState authenticationState;
    private ClaimsPrincipal User { get; set; }

    protected override async Task OnInitializedAsync()
    {
        authenticationState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        User = authenticationState.User;
    }

    private void OnTypeCompteSelected(ChangeEventArgs args)
    {
        selectedType = args.Value.ToString();
    }

    private void RegisterSelectedType()
    {
        // Redirection en fonction du type de compte sélectionné
        switch (selectedType)
        {
            case "Participant":
                NavigationManager.NavigateTo("/Account/Register/Participant");
                break;
            case "Auteur":
                NavigationManager.NavigateTo("/Account/Register/Auteur");
                break;
            case "Relecteur":
                NavigationManager.NavigateTo("/Account/Register/Relecteur");
                break;
            default:
                break;
        }
    }

    private async Task Logout()
    {
        NavigationManager.NavigateTo("/Account/LogOut", true);
    }
}
