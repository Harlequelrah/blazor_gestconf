@page "/show/article"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using blazor_gestconf.Models
@using blazor_gestconf.Services
@inject ArticleService articleCrud

<h3>Liste des articles</h3>

@if (Articles == null)
{
    <p>Aucun Article n'a été ajouté</p>
}
else
{
     <table class="table table-bordered">
        <tr>
            <th>Titre</th>
            <th>Description</th>
            <th>Article</th>
            <th>Conference</th>
        </tr>
    @foreach(var a in Articles)
        {
            <tr>
                <td>@a.Titre</td>
                <td>@a.Description</td>
                <td>
                    <a class="btn btn-primary" href="@($"data:application/pdf;base64,{Convert.ToBase64String(a.FichierPdf)}")" download="@a.Titre">Télécharger</a>
                </td>
                <td>@a.Conference.Nom</td>
                <AuthorizeView Role="Relecteur">
                    <Authorized>
                        <td>
                            <a href="@($"/evaluer/article/{a.Id}")" class="btn btn-warning btn-sm mx-1" title="Evaluer">
                            <i class="bi bi-pencil-square"></i> Evaluer
                            </a>
                        </td>
                    </Authorized>
                </AuthorizeView>
                <AuthorizeView Role="Auteur">
                    <Authorized>
                        <td>
                            <a href="@($"/soumettre/article/{a.Id}")" class="btn btn-warning btn-sm mx-1" title="Evaluer">
                            <i class="bi bi-pencil-square"></i> Soumettre
                            </a>
                        </td>
                    </Authorized>
                </AuthorizeView>

            </tr>
        }
    </table>
}

@code {
    public List<Article>? Articles;
    protected override async  Task OnInitializedAsync()
    {
        Articles = await articleCrud.GetAllAsync();
    }
}
