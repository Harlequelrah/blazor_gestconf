@page "/show/article"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Identity
@using blazor_gestconf.Models
@using blazor_gestconf.Services
@inject UserManager<Utilisateur> UserManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ArticleService ArticleService

@attribute [Authorize(Roles = "Relecteur,Auteur,MembreComite")]
<h3>Liste des articles</h3>

@if (Articles == null)
{
    <p>Aucun Article n'a été ajouté</p>
}
else
{
     <table class="table table-bordered">
        <tr>
            <th>Titre</th>
            <th>Description</th>
            <th>Article</th>
            <th>Conference</th>
            <th>Operation</th>
        </tr>
    @foreach(var a in Articles)
        {
            <tr>
                <td>@a.Titre</td>
                <td>@a.Description</td>
                <td>
                    <a class="btn btn-primary" href="@($"data:application/pdf;base64,{Convert.ToBase64String(a.FichierPdf)}")" download="@a.Titre">Télécharger</a>
                </td>
                <td>@a.Conference.Nom</td>

                        <td>
                            <a href="@($"/consulter/article/{a.Id}")" class="btn btn-warning btn-sm mx-1" title="Evaluer">
                            <i class="bi bi-pencil-square"></i> Consulter Statut
                            </a>
                        </td>

                <AuthorizeView Policy="RelecteurOnly">
                    <Authorized>
                        <td>
                            <a href="@($"/evaluer/article/{a.Id}")" class="btn btn-warning btn-sm mx-1" title="Evaluer">
                            <i class="bi bi-pencil-square"></i> Evaluer
                            </a>
                        </td>
                    </Authorized>
                </AuthorizeView>
                <AuthorizeView Policy="MembreComiteOnly">
                    <Authorized>
                        <td>
                            <a href="@($"/affecter/relecteur/article/{a.Id}")" class="btn btn-warning btn-sm mx-1" title="Evaluer">
                            <i class="bi bi-pencil-square"></i> Affecter relecteur
                            </a>
                        </td>
                    </Authorized>
                </AuthorizeView>

            </tr>
        }
    </table>
}

@code {
    private List<Article>? Articles;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        var userid = UserManager.GetUserId(user);
        int userId=int.Parse(userid);


        if (user.IsInRole("Auteur"))
        {
            Articles = await ArticleService.GetArticlesByAuteurAsync(userId);
        }
        else if (user.IsInRole("Relecteur"))
        {
            Articles = await ArticleService.GetArticlesByRelecteurAsync(userId);
        }
        else if (user.IsInRole("MembreComite"))
        {
            Articles = await ArticleService.GetAllAsync();
        }
    }
}
