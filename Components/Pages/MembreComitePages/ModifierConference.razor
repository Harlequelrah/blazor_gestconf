@page "/update/conference"
@using blazor_gestconf.Models
@using blazor_gestconf.Services
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components
@inject ConferenceService confCrud
@rendermode InteractiveServer
@attribute [Authorize(Roles="MembreComite")]
<h3>Modifier une conférence</h3>

<EditForm Model="Conf" method="Post" OnValidSubmit="Editer" FormName="Edition">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label for="name" class="form-label">Nom :</label>
        <InputText @bind-Value="Conf!.Nom" class="form-control" id="name"></InputText>
        <ValidationMessage For="@(()=>Conf.Nom)" />
    </div>
    <div class="mb-3">
        <label for="sigle" class="form-label">Sigle :</label>
        <InputText @bind-Value="Conf.Sigle" class="form-control" id="sigle"></InputText>
        <ValidationMessage For="@(()=>Conf.Sigle)" />
    </div>
    <div class="mb-3">
        <label for="theme" class="form-label">Thème :</label>
        <InputText @bind-Value="Conf.Theme" id="theme" class="form-control"></InputText>
    </div>
    <div class="mb-3">
        <label for="dateDebutSoumission" class="form-label">Date d'ouverture pour la soumission d'articles :</label>
        <InputDate @bind-Value="Conf.DateSoumissionDebut" id="dateDebutSoumission" class="form-control" />
    </div>
    <div class="mb-3">
        <label for="dateFinSoumission" class="form-label">Date limite pour la soumission d'articles :</label>
        <InputDate @bind-Value="Conf.DateSoumissionFin" id="dateFinSoumission" class="form-control" />
    </div>
    <div class="mb-3">
        <label for="dateResultat" class="form-label">Date de remise des résultats :</label>
        <InputDate @bind-Value="Conf.DateRemiseResultats" id="dateResultat" class="form-control" />
    </div>
    <div class="mb-3">
        <label for="dateOuvertureInscription" class="form-label">Date d'ouverture des inscriptions :</label>
        <InputDate @bind-Value="Conf.DateInscriptionDebut" id="dateOuvertreInscription" class="form-control" />
    </div>
    <div class="mb-3">
        <label for="dateClotureInscription" class="form-label">Date limite d'inscriptions :</label>
        <InputDate @bind-Value="Conf.DateInscriptionFin" id="dateClotureInscription" class="form-control" />
    </div>
    <div class="mb-3">
        <label for="dateDebutConference" class="form-label">Date d'ouverture de la conférence :</label>
        <InputDate @bind-Value="Conf.DateConferenceDebut" id="dateDebutConference" class="form-control" />
    </div>
    <div class="mb-3">
        <label for="dateFinConference" class="form-label">Date de clôture de la conférence :</label>
        <InputDate @bind-Value="Conf.DateConferenceFin" id="dateFinConference" class="form-control" />
    </div>
    <div class="mb-3">
        <button type="submit" class="btn-primary" @onclick="()=>Editer()">Modifier</button>
    </div>
</EditForm>

@if (showConfirmation)
{
    <ModalSave Title="Confirmation" OnClose="CloseConfirmation">
        <p>La conférence a bien été modifiée.</p>

    </ModalSave>
}

@code {

    [SupplyParameterFromQuery]
    public int id { get; set; }

    [SupplyParameterFromForm(FormName = "Edition")]
    public Conference? Conf { get; set; } = new Conference();

    public bool showConfirmation { get; set; } = false;


    protected override async Task OnInitializedAsync()
    {
        Conf = await confCrud.GetByIdAsync(id);
    }
    public async Task Editer()
    {
        await confCrud.UpdateAsync(Conf!);
        showConfirmation = true;

    }

    private void CloseConfirmation()
    {
        showConfirmation = false;
    }

}
